{"version":3,"sources":["view/TourPackage.module.css","images/Default_Jumbotron.jpg","styles.module.css","images/Taiwan_Jumbotron.jpg","images/Taiwan_1.png","images/Taiwan_2.png","images/Taiwan_3.png","images/Taiwan_4.png","images/Thai_Jumbotron.jpg","images/Thai_1.png","images/Thai_2.png","images/Thai_3.png","images/home.jpg","images/free_n_easy.jpg","images/membership.jpg","images/contact_us.jpg","model/Database.js","view/TourSearch.js","view/TourPackage.js","view/Home.js","hooks/useLocalStorage.js","contexts/cart.js","view/Product.js","contexts/products.js","contexts/common.js","view/Catalogue.js","view/FreeAndEasy.js","view/Membership.js","view/ModalPanel.js","view/ContactUsForm.js","view/ContactUs.js","contexts/checkout.js","contexts/auth.js","layouts/RouteWrapper.js","App.js","pages/auth.js","pages/checkout.js","constants/common.js","index.js","view/underConstruction.module.css","view/ContactUs.module.css"],"names":["module","exports","countries","newJumbotronImg","backgroundImage","require","newHeaderStyle","color","textAlign","opacity","newHeaderText","img","adText","tips","destinationName","info","tmp","Object","values","map","item","fetchAllCountries","getRemainingMonths","Component","_monthId","Date","getMonth","slice","get2Years","_thisYear","getFullYear","TourSearch","props","generateErrorCode","idx","_x","state","errCode","setState","getErrorMsg","id","errIndex","tourSelection","errMsg","label","destination","options","onSelect","optionSelected","console","log","searchOK","package","month","year","handleClick","indexOf","to","Row","Col","lg","span","offset","style","fontSize","margin","DropdownButton","as","ButtonGroup","key","variant","toLowerCase","title","marginLeft","value","option","index","Dropdown","Item","eventKey","type","float","borderRadius","marginTop","onClick","event","home_img","homeImg","useLocalStorage","initialValue","React","useState","window","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","initialState","isCartOpen","items","CartStateContext","createContext","CartDispatchContext","reducer","action","payload","cartItem","cartItems","includes","quantity","filter","cartItemId","Error","addToCart","dispatch","CartProvider","children","persistedCartItems","setPersistedCartItems","persistedCartState","useReducer","useEffect","Provider","ProductCard","data","isAdded","setIsAdded","useContext","image","name","price","stock","className","src","alt","product","setTimeout","products","isLoading","isLoaded","ProductsStateContext","ProductsDispatchContext","getProducts","axios","get","then","response","catch","ProductsProvider","isSearchBarOpen","searchKeyword","CommonStateContext","CommonDispatchContext","CommonProvider","Catalogue","productsList","Product","free_n_easy_img","free_n_easyImg","membership_img","membershipImg","ModalPanel","show","showPanel","newProps","this","document","body","overflow","Alert","backgroundColor","zIndex","position","onClose","dismissible","Heading","msg","ContactUsForm","validateEmail","elementValue","_errMsg","test","validateUserName","userName","trim","validateMsg","upadteUserName","target","setDisplayError","updateEmail","email","updateMsg","verifyEntry","handleSubmit","errMsgArr","push","filtered","el","preventDefault","length","setErrMsg","setSubmit","onSubmit","class","onChange","placeholder","height","contactUs_img","contactUsImg","_headerStyle","styles","headerText","CHECKOUT_STEPS","step","shippingAddress","CheckoutStateContext","CheckoutDispatchContext","CheckoutProvider","checkoutState","setCheckoutState","persistedCheckoutState","RouteWrapper","BackgroundStyle","Yup","shape","password","required","username","fullName","phoneNumber","matches","min","max","addressLine","city","code","country","backgroundSize","backgroundRepeat","backgroundPosition","App","setJumbotronStyle","newStyle","setJumbotronImg","setHeaderStyle","setHeaderText","backgroundStyle","jumbotronImg","headerStyle","exact","path","render","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.101c9495.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"TourPackage_img__3tGVG\",\"adText\":\"TourPackage_adText__2bMO0\"};","module.exports = __webpack_public_path__ + \"static/media/Default_Jumbotron.e2e740f5.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"styles_body__pbOZk\",\"textStyle\":\"styles_textStyle__fcq30\",\"td\":\"styles_td__1aNOW\"};","module.exports = __webpack_public_path__ + \"static/media/Taiwan_Jumbotron.a78f271f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Taiwan_1.77b5d8c3.png\";","module.exports = __webpack_public_path__ + \"static/media/Taiwan_2.51bcd342.png\";","module.exports = __webpack_public_path__ + \"static/media/Taiwan_3.e989cd15.png\";","module.exports = __webpack_public_path__ + \"static/media/Taiwan_4.b75a1fb5.png\";","module.exports = __webpack_public_path__ + \"static/media/Thai_Jumbotron.4aebc0d9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Thai_1.a9d2285c.png\";","module.exports = __webpack_public_path__ + \"static/media/Thai_2.c8eca3c8.png\";","module.exports = __webpack_public_path__ + \"static/media/Thai_3.f602a7ae.png\";","module.exports = __webpack_public_path__ + \"static/media/home.62a22de9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/free_n_easy.5dc917f6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/membership.f88f52f7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/contact_us.01dfa1d2.jpg\";","var countries = {\n    \"Taiwan\": {\n        \"Jumbotron\":\n        {\n            newJumbotronImg: { backgroundImage: `url(${require('./../images/Taiwan_Jumbotron.jpg')})` },\n            newHeaderStyle: { color: 'purple', textAlign: \"center\", opacity: \"0.7\" },\n            newHeaderText: \"Taiwan Waiting For You !!!\"\n        }\n        ,\n        \"TourPackage\": [\n            {\n                img: { backgroundImage: `url(${require('./../images/Taiwan_1.png')})` },\n                adText: \"8D7N FABULOUS LOVE IN TAIWAN\",\n                tips: \"From $748 Click to Enter!!\"\n            },\n            {\n                img: { backgroundImage: `url(${require('./../images/Taiwan_2.png')})` },\n                adText: \"6D5N WALTZING THROUGH TAIWAN\",\n                tips: \"From $928\"\n            },\n            {\n                img: { backgroundImage: `url(${require('./../images/Taiwan_3.png')})` },\n                adText: \"6D5N CAPTIVATING TAIWAN\",\n                tips: \"From $768\"\n            },\n            {\n                img: { backgroundImage: `url(${require('./../images/Taiwan_4.png')})` },\n                adText: \"8D7N ENCHANTING TAIWAN\",\n                tips: \"From $938\"\n            },]\n    },\n    \"Thailand\": {\n        \"Jumbotron\":\n        {\n            newJumbotronImg: { backgroundImage: `url(${require('./../images/Thai_Jumbotron.jpg')})` },\n            newHeaderStyle: { color: 'lightblue', textAlign: \"center\" },\n            newHeaderText: \"Welcome to Thailand !!!\"\n        }\n        ,\n        \"TourPackage\": [\n            {\n                img: { backgroundImage: `url(${require('./../images/Thai_1.png')})` },\n                adText: \"5D4N CHIANG MAI CHIANG RAI + 2N BANGKOK FREE & EASY\",\n                tips: \"From $500 Click to Enter!!\"\n\n            },\n            {\n                img: { backgroundImage: `url(${require('./../images/Thai_2.png')})` },\n                adText: \"5D4N BANGKOK UDON THANI RED LOTUS - LAOS\",\n                tips: \"From $400\"\n            },\n            {\n                img: { backgroundImage: `url(${require('./../images/Thai_3.png')})` },\n                adText: \"5D4N BANGKOK KHAO KHO - SEA OF CLOUDS\",\n                tips: \"From $400\"\n            },]\n    }\n}\n\nvar fetchAllCountries = (info) => {\n    var tmp = []\n    Object.values(countries).map((item) => {\n        tmp = [...tmp, ...item[info]]\n    })\n    return tmp\n}\n\n// module.exports = \nexport default {\n    fetchJumbotronImg : (destinationName ) => {\n        return countries[destinationName][\"Jumbotron\"]\n     },\n    \n    fetchTourPacakges : (destinationName) => {\n        if( destinationName === 'All')\n            return fetchAllCountries(\"TourPackage\")\n        return countries[destinationName][\"TourPackage\"]\n    },\n\n    countryExist : (destinationName) =>{\n        return countries[destinationName]\n    }\n}","import React, { Component } from 'react';\nimport './../index.css';\n\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport { Redirect } from 'react-router-dom'\nimport { TourPackage } from './TourPackage'\nimport { Switch, Route } from 'react-router-dom';\n\nconst getRemainingMonths = () => {\n    var _monthId = new Date().getMonth() // 0 = Jan ... 11 = Dec\n\n    var _months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n\n    return _months.slice(_monthId)\n}\n\nconst get2Years = () => {\n    var _thisYear = new Date().getFullYear()\n    return [_thisYear, _thisYear + 1]\n}\n\n\n\nexport class TourSearch extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            destination: \"Any Destination\",\n            package: \"Tour Type\",\n            month: \"Month\",\n            year: \"Year\",\n            errIndex: -1,\n            errCode: '1111'\n        }\n    }\n\n    generateErrorCode = (idx) => {\n        var _x = this.state.errCode\n        _x = _x.slice(0, idx) + '0' + _x.slice(++idx)\n        this.setState({ errCode: _x })\n\n    }\n\n    getErrorMsg = () => {\n        var id = this.state.errIndex\n        return this.tourSelection()[id].errMsg\n    }\n\n    tourSelection = () => [\n        {\n            label: this.state.destination,\n            options: ['Australia', 'China', 'Europe', 'Indonesia', 'Japan' , 'South Korea', 'Taiwan', 'Thailand'],\n            onSelect: (optionSelected) => {\n                console.log(optionSelected)\n                this.setState({ destination: optionSelected })\n\n                this.generateErrorCode(0)\n            },\n            errMsg: \"Please Select Destination\",\n            searchOK: false,\n        },\n        {\n            label: this.state.package,\n            options: [\"Package\", \"Free & Easy\"],\n            onSelect: (optionSelected) => {\n                console.log(optionSelected)\n                this.setState({ package: optionSelected })\n                this.generateErrorCode(1)\n            },\n            errMsg: \"Please Select Type\"\n        },\n        {\n            label: this.state.month,\n            options: getRemainingMonths(),\n            onSelect: (optionSelected) => {\n                console.log(optionSelected)\n                this.setState({ month: optionSelected })\n                this.generateErrorCode(2)\n            },\n            errMsg: \"Please Select Month\"\n        },\n        {\n            label: this.state.year,\n            options: get2Years(),\n            onSelect: (optionSelected) => {\n                console.log(optionSelected)\n                this.setState({ year: optionSelected })\n                this.generateErrorCode(3)\n            },\n            errMsg: \"Please Select Year\"\n        }\n    ]\n\n    handleClick = () => {\n        console.log('---------handleClick---------')\n        console.log(this.state.destination + ' ' + this.state.package + ' ' + ' ' + this.state.month + ' ' + this.state.year)\n        if (this.state.errCode !== '0000') {\n            //         console.log('Generate Error message')\n            var id = this.state.errCode.indexOf('1')\n            this.setState({ errIndex: id })\n            //          console.log('errIndex == ', id)\n            //          console.log(this.tourSelection()[id].errMsg)\n        } else {\n            this.setState({ searchOK: true })\n        }\n    }\n\n    render() {\n\n        const tourSelectionDropdown = () => {\n            return (\n                this.state.searchOK === true ?\n                    <Redirect to={`/tourPackage/${this.state.destination}`}/>\n                    :\n                    <div>\n                        {(this.state.errIndex !== -1 ?\n                            <Row>\n                                <Col lg={{ span: 5, offset: 3 }} >\n                                    <label style={{ color: \"red\", fontSize: \"20px\" }}>\n                                        Error Message :  {this.getErrorMsg()}\n                                    </label>\n                                </Col>\n                            </Row> : <div></div>)}\n                        <Row>\n                            <Col lg={{ span: 5, offset: 3 }} >\n\n                                <div style={{ margin: \"auto\" }}>\n                                    {this.tourSelection().map((item) => (\n                                        <>\n                                            <DropdownButton\n                                                as={ButtonGroup}\n                                                key={item.label}\n                                                variant={'info'.toLowerCase()}\n                                                title={item.label}\n                                                style={{ marginLeft: 5 }}\n                                                id={`dropdown-variants-${item.label}`}\n                                                onSelect={(value) => item.onSelect(value)}\n                                            >\n                                                {item.options.map((option, index) => (\n                                                    <>\n                                                        <Dropdown.Item eventKey={option}>{option}\n                                                        </Dropdown.Item>\n                                                    </>\n                                                ))}\n                                            </DropdownButton>{' '}\n                                        </>\n                                    ),\n                                    )}\n                                </div>\n                            </Col>\n\n                            <input type=\"submit\" value=\"Search\" style={{ float: \"left\", borderRadius: \"8px\", marginTop: \"-8px\", fontSize: \"20px\" }} onClick={(event) => { this.handleClick(event) }} />\n\n                        </Row>\n                    </div>\n            );\n        }\n\n\n        return (\n            tourSelectionDropdown()\n        );\n    }\n}\n","import './../index.css';\nimport React, { Component } from 'react';\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport DB from '../model/Database'\n\n\nimport styles from './TourPackage.module.css';\n\n\nconst tooltip = (tips) => {\n    return (\n        <Tooltip id=\"tooltip\">\n            <strong>{tips}</strong>\n        </Tooltip>\n    )\n}\n\nconst TOTAL_COL = 3\n\nconst tourPackageBackgroundImg = { backgroundImage: `url(${require('./../images/Default_Jumbotron.jpg')})` }\n\n\nexport class TourPackage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            mounted: false,\n            errMsg: \"\",\n            validDestination: false\n        }\n    }\n\n\n    getErrorMsg = () => {\n        return this.state.errMsg\n    }\n\n    tourPackagesSelections = (destination) => {\n        console.log('destination == ', destination)\n        return DB.fetchTourPacakges(destination)\n\n    }\n\n    isDestinationValid = (destination) => {\n        if (destination !== 'All') {\n            if (DB.countryExist(destination) === undefined) {\n                var _errMsg = \"Sorry, no tour package to \" + destination + ' at the moment !! '\n                if (this.state.errMsg === \"\") {\n                    this.setState({ errMsg: _errMsg, validDestination: false })\n                }\n                return false\n            }\n        }\n\n        if (this.state.errMsg !== \"\")\n            this.setState({ errMsg: \"\" })\n\n        this.setState({ validDestination: true })\n        return true\n    }\n\n\n    uploadJumbotron = (destination) => {\n\n        if (this.isDestinationValid(destination) === false)\n            return\n\n        var myJumbotronStyle\n        (destination == 'All') ?\n            (\n                myJumbotronStyle = {\n                    newJumbotronImg: { backgroundImage: `url(${require('./../images/Default_Jumbotron.jpg')})` },\n                    newHeaderStyle: { color: '#0EEFEA', textAlign: \"center\" },\n                    newHeaderText: \"All Tour Packages !!!\"\n                }\n            ) :\n            myJumbotronStyle = DB.fetchJumbotronImg(destination)\n        this.props.loadJumbotronStyle(myJumbotronStyle)\n    }\n\n\n    componentDidUpdate(prevProps, prevState) {\n\n        console.log('*************componentDidUpdate**************')\n\n        var toUpdate = true\n        var prevDestination = prevProps.match.params.destination\n        var currentDestionation = this.props.match.params.destination\n\n\n        if (prevProps == undefined)\n            return false\n\n        if (this.state.mounted === true) {\n            this.setState({ mounted: false })\n            toUpdate = false\n        }\n\n        if (prevDestination === currentDestionation)\n            toUpdate = false\n\n        if (toUpdate === false)\n            return false\n\n\n        this.uploadJumbotron(currentDestionation)\n    }\n\n\n    componentDidMount() {\n        console.log(\"---------------componentDidMount----------------\")\n        if (this.props.loadJumbotronStyle === \"\")\n            return\n        this.uploadJumbotron(this.props.match.params.destination)\n        this.setState({ mounted: true })\n    }\n\n    componentWillUnmount() {\n        console.log('*********************************Component WILL UNMOUNT!')\n    }\n\n\n    handleClick = (event, tourPackage) => {\n        console.log('Image Click !! ')\n    }\n\n    tourPackageHTML = (tourPackages) => {\n        return (\n            <div>\n                <OverlayTrigger placement=\"top\" overlay={tooltip(tourPackages.tips)} >\n                    <div className={styles.img} style={tourPackages.img} onClick={(event) => { this.handleClick(event, tourPackages) }} >\n\n                    </div>\n                </OverlayTrigger>\n                <div className={styles.adText}>\n                    <p>{tourPackages.adText}</p>\n                </div>\n            </div>\n        )\n    }\n\n    tourPackageHTML_ROW = (selectedTourPackages) => {\n        return (\n            <div style={{ margin: \"auto\" }}>\n                <Row>\n                    {selectedTourPackages.map((item) => (\n                        <Col md={4}>\n                            {this.tourPackageHTML(item)}\n                        </Col>\n                    ))}\n                </Row>\n            </div>\n        )\n    }\n\n    render() {\n        let renderPage\n        if (this.state.validDestination === true) {\n            var destination = this.props.match.params.destination\n            var selectedTourPackages = this.tourPackagesSelections(destination)\n            renderPage =\n\n                // dynamic rows ... \n                [...Array(selectedTourPackages.length)].map((u, i) =>\n                    <>\n                        {(i % TOTAL_COL == 0) ?\n                            this.tourPackageHTML_ROW(selectedTourPackages.slice(i, i + TOTAL_COL)) : null\n                        }\n                    </>)\n        }\n        else\n            renderPage =\n                <label style={{ color: \"red\", fontSize: \"20px\" }}>\n                    Error Message :  {this.getErrorMsg()}\n                </label>\n\n        return (\n            <div className=\"body\">\n                {renderPage}\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nimport Button from 'react-bootstrap/Button'\nimport './../index.css';\n\nimport { TourSearch } from './TourSearch'\n\nconst home_img = require('./../images/home.jpg');\n\nconst homeImg = { backgroundImage: `url(${home_img})` }\n\nexport class Home extends Component {\n\n    constructor(props) {\n        super(props);\n\n    }\n\n    componentDidMount() {\n        const myJumbotronStyle = {\n            newJumbotronImg: homeImg,\n            newHeaderStyle: { color: \"red\", textAlign: \"center\" ,opacity:\"0.5\"},\n            newHeaderText: \"Welcome Home\"\n        }\n\n        this.props.loadJumbotronStyle(myJumbotronStyle)\n    }\n\n\n\n    render() {\n\n        const HomeHTML = (\n            <div className=\"body\" style={{ marginTop: \"80px\" }}>\n                <TourSearch />\n            </div>\n        );\n        return (\n            HomeHTML\n        );\n    }\n}\n\n","import React from \"react\";\n\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = React.useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.error(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = (value) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import React, { useReducer, createContext, useEffect } from \"react\";\nimport useLocalStorage from '../hooks/useLocalStorage';\n\nconst initialState = {\n  isCartOpen: false,\n  items: []\n};\n\nexport const CartStateContext = createContext();\nexport const CartDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"TOGGLE_CART_POPUP\":\n      return {\n        ...state,\n        isCartOpen: !state.isCartOpen\n      };\n    case \"ADD_TO_CART\":\n      const id = action.payload.cartItem.id;\n      const isOld = state.items.map((item) => item.id).includes(id);\n      let cartItems = null;\n      if (isOld) {\n        const items = state.items.map((item) => {\n          if (item.id === id) {\n            return {\n              ...item,\n              quantity: item.quantity + 1\n            };\n          }\n          return item;\n        });\n        cartItems = [...items];\n      } else {\n        cartItems = [...state.items, action.payload.cartItem];\n      }\n      return {\n        ...state,\n        items: cartItems\n      };\n    case \"REMOVE_FROM_CART\":\n      return {\n        ...state,\n        items: state.items.filter(\n          (item) => item.id !== action.payload.cartItemId\n        )\n      };\n    case \"CLEAR_CART\":\n      return {\n        ...state,\n        ...initialState\n      };\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nexport const toggleCartPopup = (dispatch) => {\n  return dispatch({\n    type: \"TOGGLE_CART_POPUP\"\n  });\n};\n\nexport const addToCart = (dispatch, cartItem) => {\n  return dispatch({\n    type: \"ADD_TO_CART\",\n    payload: {\n      cartItem: cartItem\n    }\n  });\n};\n\nexport const removeFromCart = (dispatch, cartItemId) => {\n  return dispatch({\n    type: \"REMOVE_FROM_CART\",\n    payload: {\n      cartItemId: cartItemId\n    }\n  });\n};\n\nexport const clearCart = (dispatch) => {\n  return dispatch({\n    type: \"CLEAR_CART\"\n  });\n};\n\nconst CartProvider = ({ children }) => {\n  const [persistedCartItems, setPersistedCartItems] = useLocalStorage(\n    \"cartItems\",\n    []\n  );\n  const persistedCartState = {\n    isCartOpen: false,\n    items: persistedCartItems || []\n  };\n  const [state, dispatch] = useReducer(reducer, persistedCartState);\n  useEffect(() => {\n    setPersistedCartItems(state.items);\n  }, [JSON.stringify(state.items)]);\n  return (\n    <CartDispatchContext.Provider value={dispatch}>\n      <CartStateContext.Provider value={state}>\n        {children}\n      </CartStateContext.Provider>\n    </CartDispatchContext.Provider>\n  );\n};\n\nexport default CartProvider;\n","import React, { useState, useContext } from \"react\";\nimport { CartDispatchContext, addToCart } from \"../contexts/cart\";\n\nconst ProductCard = ({ data }) => {\n  const [isAdded, setIsAdded] = useState(false);\n  const dispatch = useContext(CartDispatchContext);\n  const { image, name, price, id, stock } = data;\n\n  const handleAddToCart = () => {\n    const product = { ...data, quantity: 1 };\n    addToCart(dispatch, product);\n    setIsAdded(true);\n    setTimeout(() => {\n      setIsAdded(false);\n    }, 3500);\n  };\n\n  return (\n    <div className=\"product\">\n      <div className=\"product-image\">\n        <img src={image} alt={name} />\n      </div>\n      <h4 className=\"product-name\">{name}</h4>\n      <p className=\"product-price\">{price}</p>\n      <div className=\"product-action\">\n        <button\n          className={!isAdded ? \"\" : \"added\"}\n          type=\"button\"\n          onClick={handleAddToCart}\n        >\n          {!isAdded ? \"ADD TO CART\" : \"✔ ADDED\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductCard;\n","import React, { useReducer, createContext } from \"react\";\nimport axios from \"axios\";\n\nconst initialState = {\n  products: null,\n  isLoading: false,\n  isLoaded: false\n};\n\nexport const ProductsStateContext = createContext();\nexport const ProductsDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_PRODUCTS_REQUEST\":\n      return {\n        ...state,\n        isLoading: true,\n        isLoaded: false\n      };\n    case \"GET_PRODUCTS_SUCCESS\":\n      return {\n        ...state,\n        isLoading: false,\n        isLoaded: true,\n        products: action.payload.products\n      };\n    case \"GET_PRODUCTS_FAILURE\":\n      return {\n        ...state,\n        products: null,\n        isLoading: false,\n        isLoaded: false\n      };\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nconst ProductsProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <ProductsDispatchContext.Provider value={dispatch}>\n      <ProductsStateContext.Provider value={state}>\n        {children}\n      </ProductsStateContext.Provider>\n    </ProductsDispatchContext.Provider>\n  );\n};\n\nexport const getProducts = (dispatch) => {\n  dispatch({\n    type: \"GET_PRODUCTS_REQUEST\"\n  });\n  const url =\n    \"https://res.cloudinary.com/sivadass/raw/upload/v1535817394/json/products.json\";\n  axios\n    .get(url)\n    .then((response) => {\n      dispatch({\n        type: \"GET_PRODUCTS_SUCCESS\",\n        payload: {\n          products: response.data\n        }\n      });\n    })\n    .catch((error) => {\n      console.error(error);\n      dispatch({\n        type: \"GET_PRODUCTS_FAILURE\"\n      });\n    });\n};\n\nexport default ProductsProvider;\n","import React, { useReducer, createContext } from \"react\";\n\nconst initialState = {\n  isSearchBarOpen: false,\n  searchKeyword: \"\"\n};\n\nexport const CommonStateContext = createContext();\nexport const CommonDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"TOGGLE_SEARCH_BAR\":\n      return {\n        ...state,\n        isSearchBarOpen: !state.isSearchBarOpen\n      };\n    case \"SET_SEARCH_KEYWORD\":\n      return {\n        ...state,\n        searchKeyword: action.payload.searchKeyword\n      };\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nconst CommonProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <CommonDispatchContext.Provider value={dispatch}>\n      <CommonStateContext.Provider value={state}>\n        {children}\n      </CommonStateContext.Provider>\n    </CommonDispatchContext.Provider>\n  );\n};\n\nexport const toggleSearchBar = (dispatch) => {\n  return dispatch({\n    type: \"TOGGLE_SEARCH_BAR\"\n  });\n};\n\nexport const setSearchKeyword = (dispatch, searchKeyword) => {\n  return dispatch({\n    type: \"SET_SEARCH_KEYWORD\",\n    payload: {\n      searchKeyword: searchKeyword\n    }\n  });\n};\n\nexport default CommonProvider;\n","import React, { useEffect, useContext } from \"react\";\nimport ProductCard from \"./Product\";\nimport {\n  ProductsStateContext,\n  ProductsDispatchContext,\n  getProducts\n} from \"../contexts/products\";\n\nimport { CommonStateContext } from \"../contexts/common\";\n\nconst Catalogue = () => {\n  const { products, isLoading, isLoaded } = useContext(ProductsStateContext);\n  const { searchKeyword } = useContext(CommonStateContext);\n  const dispatch = useContext(ProductsDispatchContext);\n\n  const productsList =\n    products &&\n    products.filter((product) => {\n      return (\n        product.name.toLowerCase().includes(searchKeyword.toLowerCase()) ||\n        !searchKeyword\n      );\n    });\n\n  useEffect(() => {\n    getProducts(dispatch);\n  }, []);\n\n  if (isLoading) {\n    return (\n      <div className=\"products-wrapper\">\n        <h1>Loading...</h1>\n      </div>\n    );\n  }\n  return (\n    <div className=\"products-wrapper\">\n      <div className=\"products\">\n        {isLoaded &&\n          productsList.map((data) => {\n            return <ProductCard key={data.id} data={data} />;\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default Catalogue;\n","import React, { Component } from 'react';\n\n\nimport style from './../styles.module.css'\nimport styles from './underConstruction.module.css';\n\n\nconst free_n_easy_img = require('./../images/free_n_easy.jpg');\n\nconst free_n_easyImg = { backgroundImage: `url(${free_n_easy_img})` };\n\nexport class FreeAndEasy extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        const myJumbotronStyle = {\n            newJumbotronImg: free_n_easyImg,\n            newHeaderStyle: {color: 'darkblue', textAlign: \"center\" } ,\n            newHeaderText: \"Free And Easy\"\n        }\n\n        this.props.loadJumbotronStyle(myJumbotronStyle)\n    }\n\n    render() {\n        const _freeAndEasy = (\n            <div className={styles.img}>\n                              \n            </div >\n            );\n        return (\n            _freeAndEasy\n        );\n    }\n}\n\n","import React, { Component } from 'react';\n\nimport style from './../styles.module.css'\nimport styles from './underConstruction.module.css';\n\n\nconst membership_img = require('./../images/membership.jpg');\n\nconst membershipImg = { backgroundImage: `url(${membership_img})` }\n\n\nexport class Membership extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        const myJumbotronStyle = {\n            newJumbotronImg: membershipImg,\n            newHeaderStyle: { color: 'darkblue', textAlign: \"center\" },\n            newHeaderText: \"Join our Memebership Rewards Scheme\"\n        }\n\n        this.props.loadJumbotronStyle(myJumbotronStyle)\n\n    }\n\n    render() {\n\n        const _memebership = (\n            <div className={styles.img}>\n                              \n            </div >\n       );\n        return (\n            _memebership\n        );\n    }\n}\n\n","import React, {  Component  } from 'react';\n\nimport Alert from 'react-bootstrap/Alert'\n\nexport class ModalPanel extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            show: props.showPanel,\n        }\n    }\n\n    \n    componentWillReceiveProps(newProps) {\n        console.log('Component WILL RECIEVE PROPS!')\n        console.log('props.displayError == ', this.props.showPanel)\n        console.log('show == ', this.state.show)\n        console.log(newProps.showPanel)\n        this.setState({ show: newProps.showPanel })\n    }\n\n    componentDidMount() {\n        console.log('props.displayError == ', this.props.showPanel)\n        console.log('show == ', this.state.show)\n        if(this.state.show){\n            document.body.style.overflow = 'hidden';\n          }    \n    }\n\n\n    componentWillUnmount() {\n        document.body.style.overflow = 'unset';\n    }\n    \n    render() {\n\n        const modalPanel = (\n            this.state.show &&\n            <Alert style={{ backgroundColor: this.props.backgroundColor,  zIndex: 10, position: \"absolute\" }} variant=\"danger\" onClose={() => this.setState({ show: false })} dismissible >\n                <Alert.Heading>{this.props.title}</Alert.Heading>\n                <p>\n                    {this.props.msg}\n                </p>\n            </Alert >)\n        return (\n            modalPanel\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './../App.css'\nimport './../index.css';\n\nexport class ContactUsForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userName: '',\n            email: '',\n            msg: '',\n        };\n    };\n\n\n    validateEmail = (elementValue) => {\n        var _errMsg = \"\"\n        var emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n        if (emailPattern.test(elementValue) === false) {\n            _errMsg = \"Invalid email address.\"\n        }\n        console.log('validateEmail : ', _errMsg)\n        return _errMsg;\n    }\n\n    validateUserName = (userName) => {\n        var _errMsg = \"\"\n        if (userName.trim() === '') {\n            console.log(\"Username is required\")\n            _errMsg = \"Username is required.\"\n        }\n        return _errMsg\n    }\n\n    validateMsg = (msg) => {\n        var _errMsg = \"\"\n        if (msg.trim() === '') {\n            _errMsg = \"Please enter your enquiry.\"\n        }\n        return _errMsg\n    }\n\n    upadteUserName = (event) => {\n        this.setState({\n            userName: event.target.value,\n        })\n        this.props.setDisplayError(false)\n\n    }\n\n    updateEmail = (event) => {\n        this.setState({\n            email: event.target.value,\n        });\n        this.props.setDisplayError(false)\n    }\n\n    updateMsg = (event) => {\n        this.setState({\n            msg: event.target.value,\n        });\n        this.props.setDisplayError(false)\n    }\n\n\n    verifyEntry = (event) => {\n    }\n\n    handleSubmit = (event) => {\n        var errMsgArr = []\n        errMsgArr.push(this.validateUserName(this.state.userName))\n        errMsgArr.push(this.validateEmail(this.state.email))\n        errMsgArr.push(this.validateMsg(this.state.msg))\n\n        var filtered = errMsgArr.filter(function (el) {\n            return el !== \"\";\n        });\n\n        event.preventDefault();\n\n        if (filtered.length === 0) {\n            this.props.setDisplayError(false)\n            this.props.setErrMsg('')\n            this.props.setSubmit(true)\n        } else {\n            this.props.setDisplayError(true)\n            this.props.setErrMsg(filtered[0])\n        }\n    }\n\n    render() {\n\n        const _formContactUs = (\n            <form onSubmit={this.handleSubmit}>\n                <div class=\"row\">\n                    <div class=\"col-lg-3\" >\n                        <label>* Your Name :</label>\n                    </div>\n                    <div class=\"col-lg-9\" >\n                        <input type=\"Text\" id=\"EnqName\" name=\"EnqName\" style={{  }} value={this.state.userName} onChange={this.upadteUserName} placeholder=\"Your Name\" />\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-lg-3\" >\n                        <label>* Email Address :</label>\n                    </div>\n                    <div class=\"col-lg-9\" >\n                        <input type=\"Text\" id=\"EnqEmail\" name=\"EnqEmail\" style={{  }} value={this.state.email} onChange={this.updateEmail} placeholder=\"me@company.com\" />\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-lg-3\" >\n                        <label>* Enquiry :</label>\n                    </div>\n                    <div class=\"col-lg-9\" >\n                        <textarea placeholder=\"Enter enquiry here ...\" onChange={this.updateMsg} value={this.state.msg} style={{ height: \"150px\" }} ></textarea>\n                    </div>\n                </div>\n                <br></br>\n                <input type=\"submit\" value=\"Submit\" style={{ float: \"right\", borderRadius: \"8px\" }} onClick={(event) => { this.verifyEntry(event) }} />\n            </form>\n        );\n        return (\n            _formContactUs\n        );\n    }\n}\n\n","\n\nimport { ModalPanel } from './ModalPanel'\nimport { ContactUsForm } from './ContactUsForm';\nimport React, { Component } from 'react';\n\nimport './../App.css'\nimport './../index.css';\nimport styles from './ContactUs.module.css';\n\n\nconst contactUs_img = require('./../images/contact_us.jpg');\n\nconst contactUsImg = { backgroundImage: `url(${contactUs_img})` } ;\n\n\nconst _headerStyle = `${styles.headerText}`\n\nexport class ContactUs extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            errMsg: '',\n            displayError: false,\n            submit: false,\n        };\n    };\n\n    componentDidMount() {\n        const myJumbotronStyle = {\n            newJumbotronImg: contactUsImg,\n            newHeaderStyle: {color: 'darkblue', textAlign: \"center\" } ,\n            newHeaderText: \"Feel Free To Contact Us\"\n        }\n\n        this.props.loadJumbotronStyle(myJumbotronStyle)\n    }\n\n    setDisplayError = (status) => {\n        this.setState({ displayError: status })\n    }\n\n    setErrMsg = (msg) => {\n        this.setState({ errMsg: msg })\n    }\n\n    setSubmit = (status) => {\n        this.setState({ submit: status })\n    }\n\n    render() {\n\n        const _contactUs = (\n            <div className=\"body\">\n                <div class=\"row\">\n                    <div class=\"col-lg-3\" >\n                        <p class={_headerStyle}>Our Location</p>\n                        <label> Address : <br></br> Commonwealth Centre,<br></br> Blk 88,  #01-11.</label>\n                        <label>Tel : +656233267.</label>\n                    </div>\n                    <div class=\"col-lg-9\" >\n                        <p class={_headerStyle}>Contact Us</p>\n                        <ContactUsForm\n                            setDisplayError={this.setDisplayError}\n                            setErrMsg={this.setErrMsg}\n                            setSubmit={this.setSubmit}\n                        />\n                    </div>\n                </div>\n                {this.state.displayError &&\n                    <div className={styles.submitErr}>\n                        <ModalPanel showPanel={this.state.displayError} msg={this.state.errMsg} title=\"Validation\" backgroundColor=\"pink\" />\n                    </div>\n                }\n\n                {this.state.submit &&\n                    <div className={styles.submitOK}>\n                        <ModalPanel showPanel={this.state.submit} msg=\"Your Enqiry has been submitted. It will take about 3 to 5 working days to get back to you.\" title=\"Enquiry Submitted Successfully\" width=\"400\" backgroundColor=\"lightblue\" />\n                    </div>\n                }\n\n            </div>\n\n        );\n        return (\n            _contactUs\n        );\n    }\n}\n\n","import React, { useReducer, createContext, useEffect } from \"react\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\n\nexport const CHECKOUT_STEPS = {\n  AUTH: \"auth\",\n  SHIPPING: \"shipping\",\n  PAYMENT: \"payment\"\n};\n\nconst initialState = {\n  step: CHECKOUT_STEPS.AUTH,\n  shippingAddress: null\n};\n\nexport const CheckoutStateContext = createContext();\nexport const CheckoutDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_CHECKOUT_STEP\":\n      return {\n        ...state,\n        step: action.payload.step\n      };\n    case \"SET_SHIPPING_ADDRESS\":\n      return {\n        ...state,\n        shippingAddress: action.payload.shippingAddress\n      };\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nconst CheckoutProvider = ({ children }) => {\n  const [checkoutState, setCheckoutState] = useLocalStorage(\"checkout\", null);\n  const persistedCheckoutState = {\n    ...initialState,\n    shippingAddress: checkoutState || {}\n  };\n  const [state, dispatch] = useReducer(reducer, persistedCheckoutState);\n\n  useEffect(() => {\n    setCheckoutState(state.shippingAddress);\n  }, [state.shippingAddress]);\n  return (\n    <CheckoutDispatchContext.Provider value={dispatch}>\n      <CheckoutStateContext.Provider value={state}>\n        {children}\n      </CheckoutStateContext.Provider>\n    </CheckoutDispatchContext.Provider>\n  );\n};\n\nexport const setCheckoutStep = (dispatch, step) => {\n  return dispatch({\n    type: \"SET_CHECKOUT_STEP\",\n    payload: {\n      step\n    }\n  });\n};\n\nexport const saveShippingAddress = (dispatch, shippingAddress) => {\n  dispatch({\n    type: \"SET_SHIPPING_ADDRESS\",\n    payload: {\n      shippingAddress\n    }\n  });\n  return setCheckoutStep(dispatch, CHECKOUT_STEPS.PAYMENT);\n};\n\nexport default CheckoutProvider;\n","import React, { useReducer, createContext, useEffect } from \"react\";\nimport _get from \"lodash.get\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\n\nconst initialState = {\n  isLoggedIn: false,\n  user: null,\n  isLoggingIn: false\n};\n\nexport const AuthStateContext = createContext();\nexport const AuthDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_REQUEST\":\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n        isLoggingIn: true\n      };\n    case \"LOGIN_SUCCESS\":\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: action.payload.user,\n        isLoggingIn: false\n      };\n    case \"LOGIN_FAILURE\":\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n        isLoggingIn: false\n      };\n    case \"LOGOUT_SUCCESS\":\n      return {\n        ...state,\n        ...initialState\n      };\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nexport const signIn = (dispatch, userData) => {\n  localStorage.setItem(\"user\", JSON.stringify(userData));\n  return dispatch({\n    type: \"LOGIN_SUCCESS\",\n    payload: {\n      user: userData\n    }\n  });\n};\n\nexport const signOut = (dispatch) => {\n  localStorage.clear();\n  return dispatch({\n    type: \"LOGOUT_SUCCESS\"\n  });\n};\n\nconst AuthProvider = ({ children }) => {\n  const [persistedUser, setPersistedUser] = useLocalStorage(\"user\", null);\n  const persistedUserState = {\n    ...initialState,\n    user: persistedUser,\n    isLoggedIn: _get(persistedUser, \"username\", \"\").length > 0\n  };\n  const [state, dispatch] = useReducer(reducer, persistedUserState);\n\n  useEffect(() => {\n    setPersistedUser(state.user);\n  }, [state.isLoggedIn]);\n\n  return (\n    <AuthDispatchContext.Provider value={dispatch}>\n      <AuthStateContext.Provider value={state}>\n        {children}\n      </AuthStateContext.Provider>\n    </AuthDispatchContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthStateContext } from \"../contexts/auth\";\n\nfunction RouteWrapper({\n  component: Component,\n  layout: Layout,\n  isPrivate = false,\n  ...rest\n}) {\n  const { isLoggedIn = false } = useContext(AuthStateContext);\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (isPrivate && !isLoggedIn) {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/auth\",\n                state: { from: props.location }\n              }}\n            />\n          );\n        }\n        return (\n          <Layout {...props}>\n            <Component {...props} />\n          </Layout>\n        );\n      }}\n    />\n  );\n}\n\nexport default RouteWrapper;\n","import React, { Component } from 'react';\nimport { MemoryRouter } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport './App.css';\n\nimport {  Route } from 'react-router-dom';\n\nimport { ToolTipNavButtons } from './view/ToolTipNavButtons'\n\nimport { Home } from './view/Home'\n\nimport Catalogue from './view/Catalogue'\n\n\nimport { TourPackage } from './view/TourPackage'\n\nimport { FreeAndEasy } from './view/FreeAndEasy'\n\nimport { FixNavBar } from './view/FixNavBar'\n\nimport { Membership } from './view/Membership'\n\nimport { ContactUs } from './view/ContactUs'\n\nimport ProductCard from './view/Product'\n\nimport CommonProvider from './contexts/common';\n\nimport ProductsProvider from './contexts/products';\n\nimport CartProvider from './contexts/cart';\nimport CheckoutProvider from './contexts/checkout';\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\"; \nimport CommonLayout from \"./layouts/CommonLayout\";\nimport RouteWrapper from \"./layouts/RouteWrapper\";\nimport AuthPage from \"./pages/auth\";\nimport AuthLayout from \"./layouts/AuthLayout\";\nimport HomePage from \"./pages/home\";\nimport CheckoutPage from \"./pages/checkout\";\nimport \"./assets/scss/style.scss\";\n\nconst BackgroundStyle = {\n\n    Jumbotron: {\n        backgroundSize: '100% 100%',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center top',\n    }\n};\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            jumbotronImg: {},\n            headerStyle: { color: 'white', textAlign: \"left\" },\n            headerText: \"Welcome To Terry Tour Agency\"\n        };\n    }\n\n    setJumbotronStyle = (newStyle) => {\n        const { newJumbotronImg, newHeaderStyle, newHeaderText } = newStyle\n\n        this.setJumbotronImg(newJumbotronImg)\n        this.setHeaderStyle(newHeaderStyle)\n        this.setHeaderText(newHeaderText)\n    }\n\n    setJumbotronImg = (newJumbotronImg) => {\n\n        var backgroundStyle = {\n            ...BackgroundStyle.Jumbotron,\n            ...newJumbotronImg\n        };\n\n        this.setState({ jumbotronImg: backgroundStyle })\n    }\n\n    setHeaderStyle = (newHeaderStyle) => {\n        this.setState({ headerStyle: newHeaderStyle })\n    }\n\n\n    setHeaderText = (newHeaderText) => {\n        this.setState({ headerText: newHeaderText })\n    }\n\n\n    render() {\n\n        return (\n            <CommonProvider>\n                <ProductsProvider>\n                    <CartProvider>\n                        <CheckoutProvider>\n                          {/*\n                            <Router>\n                                <Switch>\n                                    <RouteWrapper\n                                        path=\"/\"\n                                        exact\n                                        component={HomePage}\n                                        layout={CommonLayout}\n                                    />\n                                    <RouteWrapper\n                                        path=\"/checkout\"\n                                        component={CheckoutPage}\n                                        layout={CommonLayout}\n                                    />\n                                    <RouteWrapper\n                                        path=\"/auth\"\n                                        component={AuthPage}\n                                        layout={AuthLayout}\n                                    />\n                                </Switch>\n                            </Router>\n                          */}\n                            <MemoryRouter>\n                                    <Switch>\n                                        <Route exact path='/'\n                                            render={props =>\n                                                <Catalogue />} />\n\n                                    </Switch>\n                            </MemoryRouter>\n                           \n                        </CheckoutProvider>\n                    </CartProvider>\n                </ProductsProvider>\n            </CommonProvider>\n        );\n    }\n}\n\nexport default App;\n","import React, { useContext } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport { AuthDispatchContext, signIn } from \"../contexts/auth\";\nimport Input from \"../components/core/form-controls/Input\";\n\nconst LoginSchema = Yup.object().shape({\n  password: Yup.string().required(\"Password is required!\"),\n  username: Yup.string().required(\"Mobile Number or Email Address is required!\")\n});\n\nconst AuthPage = () => {\n  const authDispatch = useContext(AuthDispatchContext);\n  const history = useHistory();\n  const location = useLocation();\n  const fromUrl = _get(location, \"state.from.pathname\");\n  console.log(\"location => \", location);\n  const goToForgotPassword = (e) => {\n    e.preventDefault();\n  };\n\n  const goToRegister = (e) => {\n    e.preventDefault();\n  };\n\n  const signInSuccess = (userData) => {\n    signIn(authDispatch, userData);\n    if (fromUrl) {\n      history.push(fromUrl);\n    } else {\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        username: \"\",\n        password: \"\"\n      }}\n      validationSchema={LoginSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n          const userData = { ...values };\n          resetForm();\n          signInSuccess(userData);\n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {() => (\n        <Form>\n          <Field\n            name=\"username\"\n            type=\"text\"\n            placeholder=\"Mobile Number or Email Address\"\n            component={Input}\n          />\n          <Field\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            component={Input}\n          />\n\n          <p>\n            <a href=\"/#\" onClick={goToForgotPassword}>\n              Forgot Password?\n            </a>\n          </p>\n          <button className=\"auth-button block\" onClick={() => {}}>\n            Login\n          </button>\n\n          <p>\n            New here?{\" \"}\n            <a href=\"/#\" onClick={goToRegister}>\n              Sign Up Now!\n            </a>\n          </p>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default AuthPage;\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport {\n  CheckoutStateContext,\n  CheckoutDispatchContext,\n  CHECKOUT_STEPS,\n  setCheckoutStep,\n  saveShippingAddress\n} from \"../contexts/checkout\";\nimport { CartStateContext } from \"../contexts/cart\";\nimport { AuthStateContext, AuthDispatchContext, signOut } from \"../contexts/auth\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport Input from \"../components/core/form-controls/Input\";\nimport { phoneRegExp } from \"../constants/common\";\n\nconst AddressSchema = Yup.object().shape({\n  fullName: Yup.string().required(\"Full Name is required\"),\n  phoneNumber: Yup.string()\n    .required(\"Phone Number is required\")\n    .matches(phoneRegExp, \"Phone Number is not a valid 10 digit number\")\n    .min(10, \"Phone Number is too short\")\n    .max(10, \"Phone Number is too long\"),\n  addressLine: Yup.string().required(\"Door No. & Street is required!\"),\n  city: Yup.string().required(\"City is required!\"),\n  state: Yup.string().required(\"State is required!\"),\n  code: Yup.string().required(\"ZIP/Postal code is required!\"),\n  country: Yup.string().required(\"Country is required!\")\n});\n\nconst LoginStep = () => {\n  const history = useHistory();\n  const { user, isLoggedIn } = useContext(AuthStateContext);\n  const authDispatch = useContext(AuthDispatchContext);\n  const checkoutDispatch = useContext(CheckoutDispatchContext);\n  const handleContinueShopping = () => {\n    history.push(\"/\");\n  };\n  const handleLoginAsDiffUser = () => {\n    signOut(authDispatch);\n    history.push(\"/auth\");\n  };\n  const handleGotoLogin = () => {\n    history.push(\"/auth\");\n  };\n  const handleProceed = () => {\n    setCheckoutStep(checkoutDispatch, CHECKOUT_STEPS.SHIPPING);\n  };\n  return (\n    <div className=\"detail-container\">\n      <h2>Sign In now!</h2>\n      <div className=\"auth-message\">\n        {isLoggedIn ? (\n          <>\n            <p>\n              Logged in as <span>{user.username}</span>\n            </p>\n            <button onClick={() => handleLoginAsDiffUser()}>\n              Login as Different User\n            </button>\n          </>\n        ) : (\n          <>\n            <p>Please login to continue.</p>\n            <button onClick={() => handleGotoLogin()}>Login</button>\n          </>\n        )}\n      </div>\n      <div className=\"actions\">\n        <button className=\"outline\" onClick={() => handleContinueShopping()}>\n          <i className=\"rsc-icon-arrow_back\" /> Continue Shopping\n        </button>\n        <button disabled={!isLoggedIn} onClick={() => handleProceed()}>\n          Proceed\n          <i className=\"rsc-icon-arrow_forward\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst AddressStep = () => {\n  const checkoutDispatch = useContext(CheckoutDispatchContext);\n\n  const handleBackToLogin = () => {\n    setCheckoutStep(checkoutDispatch, CHECKOUT_STEPS.AUTH);\n  };\n  const handleSaveAddress = (addressData) => {\n    saveShippingAddress(checkoutDispatch, addressData);\n  };\n  return (\n    <div className=\"detail-container\">\n      <h2>Shipping Address</h2>\n      <Formik\n        initialValues={{\n          fullName: \"John Doe\",\n          phoneNumber: \"5552229876\",\n          addressLine: \"L1, Palm Residency\",\n          city: \"Kingston\",\n          state: \"New York\",\n          code: \"12401\",\n          country: \"United States\"\n        }}\n        validationSchema={AddressSchema}\n        onSubmit={async (values, { resetForm }) => {\n          try {\n            const addressData = { ...values };\n            resetForm();\n            handleSaveAddress(addressData);\n          } catch (err) {\n            console.error(err);\n          }\n        }}\n      >\n        {() => (\n          <Form>\n            <div className=\"field-group\">\n              <Field\n                name=\"fullName\"\n                type=\"text\"\n                placeholder=\"Full Name\"\n                component={Input}\n              />\n              <Field\n                name=\"phoneNumber\"\n                type=\"text\"\n                placeholder=\"Phone Number\"\n                component={Input}\n              />\n            </div>\n            <Field\n              name=\"addressLine\"\n              type=\"text\"\n              placeholder=\"Door No. & Street\"\n              component={Input}\n            />\n            <div className=\"field-group\">\n              <Field\n                name=\"city\"\n                type=\"text\"\n                placeholder=\"City\"\n                component={Input}\n              />\n              <Field\n                name=\"state\"\n                type=\"text\"\n                placeholder=\"State\"\n                component={Input}\n              />\n            </div>\n            <div className=\"field-group\">\n              <Field\n                name=\"code\"\n                type=\"text\"\n                placeholder=\"ZIP/Postal Code\"\n                component={Input}\n              />\n              <Field\n                name=\"country\"\n                type=\"text\"\n                placeholder=\"Country\"\n                component={Input}\n              />\n            </div>\n            <div className=\"actions\">\n              <button\n                type=\"button\"\n                className=\"outline\"\n                onClick={() => handleBackToLogin()}\n              >\n                <i className=\"rsc-icon-arrow_back\" /> Login in as Different User\n              </button>\n              <button type=\"submit\">\n                Save Address\n                <i className=\"rsc-icon-arrow_forward\" />\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst PaymentStep = () => {\n  const { shippingAddress } = useContext(CheckoutStateContext);\n  const checkoutDispatch = useContext(CheckoutDispatchContext);\n  const handleBackToAddress = () => {\n    setCheckoutStep(checkoutDispatch, CHECKOUT_STEPS.SHIPPING);\n  };\n  const handlePayment = () => {};\n  return (\n    <div className=\"detail-container\">\n      <h2>Payment</h2>\n      {/* <div>\n        <pre>{JSON.stringify(shippingAddress, null, 0)}</pre>\n      </div> */}\n      <div className=\"actions\">\n        <button\n          type=\"button\"\n          className=\"outline\"\n          onClick={() => handleBackToAddress()}\n        >\n          <i className=\"rsc-icon-arrow_back\" /> Back to Shipping Details\n        </button>\n        <button disabled={!shippingAddress} onClick={() => handlePayment()}>\n          Save Address\n          <i className=\"rsc-icon-arrow_forward\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst Checkout = () => {\n  const { items = [] } = useContext(CartStateContext);\n  const { isLoggedIn } = useContext(AuthStateContext);\n  const { step, shippingAddress } = useContext(CheckoutStateContext);\n  const checkoutDispatch = useContext(CheckoutDispatchContext);\n  const totalItems = items.length;\n\n  const handleClickTimeline = (nextStep) => {\n    setCheckoutStep(checkoutDispatch, nextStep);\n  };\n\n  return (\n    <div className=\"checkout-page\">\n      <div className=\"container\">\n        <div className=\"order-details\">\n          <ul className=\"timeline\">\n            <li\n              className={classNames({\n                done: isLoggedIn,\n                active: step === CHECKOUT_STEPS.AUTH\n              })}\n              onClick={() => handleClickTimeline(CHECKOUT_STEPS.AUTH)}\n            >\n              <h2>Sign In</h2>\n              <i className=\"rsc-icon-check_circle\" />\n            </li>\n            <li\n              className={classNames({\n                done: shippingAddress !== null,\n                active: step === CHECKOUT_STEPS.SHIPPING\n              })}\n              onClick={() => handleClickTimeline(CHECKOUT_STEPS.SHIPPING)}\n            >\n              <h2>Shipping</h2>\n              <i className=\"rsc-icon-check_circle\" />\n            </li>\n            <li\n              className={classNames({\n                done: false,\n                active: step === CHECKOUT_STEPS.PAYMENT\n              })}\n              onClick={() => handleClickTimeline(CHECKOUT_STEPS.PAYMENT)}\n            >\n              <h2>Payment</h2>\n              <i className=\"rsc-icon-check_circle\" />\n            </li>\n          </ul>\n          {step === CHECKOUT_STEPS.AUTH && <LoginStep />}\n          {step === CHECKOUT_STEPS.SHIPPING && <AddressStep />}\n          {step === CHECKOUT_STEPS.PAYMENT && <PaymentStep />}\n        </div>\n        <div className=\"order-summary\">\n          <h2>\n            Summary\n            <span>{` (${totalItems}) Items`}</span>\n          </h2>\n          <ul className=\"cart-items\">\n            {items.map((product) => {\n              return (\n                <li className=\"cart-item\" key={product.name}>\n                  <img className=\"product-image\" src={product.image} />\n                  <div className=\"product-info\">\n                    <p className=\"product-name\">{product.name}</p>\n                    <p className=\"product-price\">{product.price}</p>\n                  </div>\n                  <div className=\"product-total\">\n                    <p className=\"quantity\">\n                      {`${product.quantity} ${\n                        product.quantity > 1 ? \"Nos.\" : \"No.\"\n                      }`}\n                    </p>\n                    <p className=\"amount\">{product.quantity * product.price}</p>\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n\n          <ul className=\"total-breakup\">\n            <li>\n              <p>Subtotal</p>\n              <p>5000</p>\n            </li>\n            <li>\n              <p>Tax</p>\n              <p>5000</p>\n            </li>\n            <li>\n              <p>Shipping</p>\n              <p>5000</p>\n            </li>\n            <li>\n              <h2>Total</h2>\n              <h2>5000</h2>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Checkout;\n","export const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\n\n\n// Importing the Bootstrap CSS\n//import 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"underConstruction_img__2bKcj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerText\":\"ContactUs_headerText__1nE2h\",\"submitErr\":\"ContactUs_submitErr__3vvg8\",\"submitOK\":\"ContactUs_submitOK__25GIE\"};"],"sourceRoot":""}